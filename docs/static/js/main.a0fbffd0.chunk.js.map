{"version":3,"sources":["components/AddCategory.js","helpers/gefGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCatagories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","catagories","catagory","ReactDOM","render","document","getElementById"],"mappings":"6MAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGVC,mBAAS,IAHC,mBAGvCC,EAHuC,KAG3BC,EAH2B,KA0B9C,OACI,0BAAOC,SAdU,SAAAC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAWd,2BACAO,KAAM,OACNC,MAAST,EACTU,SA1BmB,SAAAP,GAGtBF,EAAcE,EAAEQ,OAAOF,Y,uBCVnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCDPO,EAAc,SAAC,GAAsB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIrC,OAFAc,QAAQC,IAAKL,EAAOV,GAGhB,yBAAKgB,UAAY,0CACf,yBAAKC,IAAOjB,EAAKkB,IAAOR,IACxB,+BAAKA,KCLFS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECEb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAsBtC,OAfAC,qBAAW,WAEP1B,EAASC,GACJ0B,MAAM,SAAAC,GAEHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAItB,CAACtB,IAIGuB,EDrBuBK,CAAa5B,GAA/Ba,EAHyB,EAG9BN,KAAae,EAHiB,EAGjBA,QAEpB,OACI,oCACI,wBAAIJ,UAAY,qCAAhB,IAAsDlB,EAAtD,KAGCsB,GAAW,uBAAGJ,UAAY,oCAAf,YAGZ,yBAAKA,UAAU,aAGPL,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACImB,IAAMnB,EAAIC,IACLD,UEnBpBoB,EAAe,WAAM,MAIG5C,mBAAS,CAAC,cAJb,mBAI3B6C,EAJ2B,KAIf9C,EAJe,KAS9B,OACI,oCACI,4CAEA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAIA,4BAEQ8C,EAAWtB,KAAK,SAAAuB,GAAQ,OACnB,kBAAC,EAAD,CACGH,IAAOG,EACPhC,SAAYgC,UCrBxCC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.a0fbffd0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ( {setCatagories} ) => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n\r\n     const handleInputChange = e => {\r\n        \r\n\r\n         setInputValue(e.target.value);\r\n     }\r\n\r\n\r\n     const handleSumit = e => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCatagories( cats => [ inputValue, ...cats]);\r\n            setInputValue(\"\");\r\n        }\r\n\r\n\r\n      \r\n     }\r\n\r\n\r\n    return (\r\n        <form  onSubmit = {handleSumit}>\r\n\r\n            <input \r\n            type= \"text\"\r\n            value = {inputValue}\r\n            onChange = { handleInputChange } \r\n            />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nAddCategory.propTypes  = {\r\n    setCatagories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=A8xMXqzieIHmtO3BjGLAtf1daSSDAv8K`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url}) => {\r\n    \r\n    console.log( title, url);\r\n    \r\n    return (\r\n        <div className = \"card animate__animated animate__fadeIn\">\r\n          <img src = {url} alt = {title} />\r\n          <p> {title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const {data:images, loading}= useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className = \"animate__animated animate__fadeIn\"> {category} </h3>\r\n\r\n\r\n            {loading && <p className = \"animate__animated animate__flash\"> Loading</p> }\r\n\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/gefGifs\";\r\n\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n    return state\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n   // const categorias = [\"One punch\", \"Samurai X\", \"Dragon ball\"];\r\n\r\nconst [catagories, setCatagories] =  useState([\"One punch\"]);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setCatagories = {setCatagories}/> \r\n            <hr/>\r\n\r\n        \r\n\r\n            <ol>\r\n                {\r\n                    catagories.map( catagory => (\r\n                         <GifGrid\r\n                            key = {catagory} \r\n                            category = {catagory} \r\n                         />\r\n                    ))\r\n                    \r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}